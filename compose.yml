# Use this compose to locally test the system

services:
    chat-server:
        image: pikrog/meepo-chat-server:latest
        build: ./chat-server/
        restart: unless-stopped
        networks:
          - main-network
        ports:
          - target: 80
            published: ${ADVERTISED_PORT:-"8000"}
            protocol: tcp
        env_file:
          - .env
        depends_on:
            mq:
                condition: service_healthy
            chat-server-db:
                condition: service_healthy
    chat-server-db:
        image: redis:7.0.5-bullseye
        restart: unless-stopped
        networks:
          - main-network
        ports:
          - target: 6379
            published: 6379
            protocol: tcp
        healthcheck:
            test: ["CMD-SHELL", '[ "$(redis-cli ping)" = "PONG" ]']
            interval: 10s
            timeout: 5s
            retries: 5
    mq:
        image: rabbitmq:3.11.5
        restart: unless-stopped
        networks:
          - main-network
        ports:
          # amqp
          - target: 5672
            published: 5672
            protocol: tcp
          # management console
          - target: 15672
            published: 15672
            protocol: tcp
        env_file:
          - .env
        healthcheck:
            test: ["CMD", "rabbitmqctl", "list_queues"]
            interval: 10s
            timeout: 8s
            retries: 5
    logger:
        image: pikrog/meepo-logger:latest
        build: ./logger/
        restart: unless-stopped
        networks:
          - main-network
        env_file:
          - .env
        depends_on:
            mq:
                condition: service_healthy
            main-db:
                condition: service_healthy
    main-db:
        image: postgres:15.0
        restart: unless-stopped
        networks:
          - main-network
        volumes:
          - type: volume
            source: postgres-data
            target: /var/lib/postgresql/data
        ports:
          - published: 5432
            target: 5432
            protocol: tcp
        env_file:
          - .env
        healthcheck:
            test: ["CMD", "pg_isready", "-U", '${POSTGRES_USER:-"postgres"}', "-d", '${POSTGRES_DB:-"postgres"}']
            interval: 10s
            timeout: 5s
            retries: 5
    master-server:
        image: pikrog/meepo-master-server:latest
        build: ./master-server/
        restart: unless-stopped
        networks:
          - main-network
        ports:
          - published: 8080
            target: 80
            protocol: tcp
        env_file:
          - .env
        depends_on:
            mq:
                condition: service_healthy
            main-db:
                condition: service_healthy
    front-end:
      image: pikrog/meepo-front-end:latest
      build: ./frontend/
      restart: unless-stopped
      networks:
        - main-network
      ports:
        - published: 9999
          target: 80
          protocol: tcp
            
networks:
    main-network:
    
volumes:
    postgres-data:
