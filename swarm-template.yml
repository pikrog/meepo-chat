services:
    mq:
        image: rabbitmq:3.11.5
        networks:
          - meepo-chat-network
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    logger:
        image: pikrog/meepo-logger:latest
        networks:
          - meepo-chat-network
        environment:
            BROKER_URL: ${BROKER_URL}
            DATABASE_URL: ${DATABASE_URL}
    main-db:
        image: postgres:15.0
        networks:
          - meepo-chat-network
        volumes:
          - type: volume
            source: postgres-data
            target: /var/lib/postgresql/data
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        deploy:
            placement:
                constraints: [node.labels.maindb == true]
    master-server:
        image: pikrog/meepo-master-server:latest
        networks:
          - meepo-chat-network
        ports:
          - published: 8080
            target: 80
            protocol: tcp
        environment:
            BROKER_URL: ${BROKER_URL}
            DATABASE_URL: ${DATABASE_URL}
            JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
            BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
    front-end:
        image: pikrog/meepo-front-end:latest
        ports:
          - published: 80
            target: 3000
            protocol: tcp
        environment:
            MASTER_SERVER_ADDRESS: ${MASTER_SERVER_ADDRESS}

networks:
    # this network has to be created manually via CLI
    # $ docker network create -d overlay --attachable meepo-chat-network
    meepo-chat-network:
        driver: overlay
        external: True
        attachable: True

volumes:
    postgres-data:
