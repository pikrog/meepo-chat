services:
    mq:
        image: rabbitmq:3.11.5
        networks:
          - meepo-chat-network
        #ports:
        #  - target: 5672
        #    published: 5672
        #    protocol: tcp
        environment:
            RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
            RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    logger:
        image: meepo-logger:latest
        networks:
          - meepo-chat-network
        environment:
            BROKER_URL: ${BROKER_URL}
            DATABASE_URL: ${DATABASE_URL}
    main-db:
        image: postgres:15.0
        networks:
          - meepo-chat-network
        volumes:
          - type: volume
            source: postgres-data
            target: /var/lib/postgresql/data
        #ports:
        #  - published: 5432
        #    target: 5432
        #    protocol: tcp
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        deploy:
            placement:
                constraints: [node.labels.maindb == true]
    master-server:
        image: pikrog/meepo-master-server:latest
        networks:
          - meepo-chat-network
        ports:
          - published: 8080
            target: 80
            protocol: tcp
        environment:
            BROKER_URL: ${BROKER_URL}
            DATABASE_URL: ${DATABASE_URL}
            JWT_SECRET: ${JWT_SECRET}
            BACKEND_CORS_ORIGINS: ${BACKEND_CORS_ORIGINS}
    front-end:
        image: pikrog/meepo-front-end:latest
        #networks:
        #  - meepo-chat-network
        ports:
          - published: 80
            target: 80
            protocol: tcp

networks:
    # this network has to be created manually via CLI
    # $ docker network create -d overlay --attachable meepo-chat-network
    meepo-chat-network:
        driver: overlay
        external: True
        attachable: True

volumes:
    postgres-data:
